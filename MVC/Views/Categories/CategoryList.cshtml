@* @ is used to write C# code in a view with Razor syntax. *@

@* Way 1: We can't use the Category model's property names for the DisplayNameFor HTML Helper parameters if we define the model type as List. *@
@* @model List<APP.Models.CategoryResponse> *@
@* Way 2: We can use the Category model's property names for the DisplayNameFor HTML Helper parameters if we define the model type as IEnumerable. *@
@* Declaration of the type of the model object with the class namespace as IEnumerable<CategoryResponse> sent from Categories contoller's Index action. *@
@* @model IEnumerable<APP.Models.CategoryResponse> *@
@* Way 3: CategoryResponse class namespace which is APP.Models must be defined in Views\_ViewImports.cshtml *@
@model IEnumerable<CategoryResponse>

<h1>Categories</h1>
<hr />
<table class="table">
    <tr>
        <th>
            @* Way 1: *@
            @* Name *@
            @* Way 2: *@
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th></th>
    </tr>
    @foreach (APP.Models.CategoryResponse categoryItem in Model) @* Model: the model object of type IEnumerable<CategoryResponse> *@
    {
        <tr>
            <td>
                @* Way 1: *@
                @* @category.Name *@
                @* Way 2: *@
                @Html.DisplayFor(model => categoryItem.Name)
            </td>
            <td>
                @Html.DisplayFor(model => categoryItem.Description)
            </td>
            <td>
                @* Way 1: HTML Helper: *@
                @* @Html.ActionLink("Details", "Details", "Categories", new { id = categoryItem.Id }) *@
                @* Way 2: HTML Helper: *@
                @* @Html.ActionLink("Details", "Details", new { id = categoryItem.Id }) *@
                @* Way 3: Tag Helper: *@
                @* <a asp-action="Details" asp-controller="Categories" asp-route-id="@categoryItem.Id">Details</a> *@
                @* Way 4: Tag Helper: *@
                <a asp-action="Details" asp-route-id="@categoryItem.Id">Details</a>
                &nbsp;|&nbsp;                
                <a asp-action="Edit" asp-route-id="@categoryItem.Id">Edit</a>
                &nbsp;|&nbsp;
                <a asp-action="Delete" asp-route-id="@categoryItem.Id">Delete</a>
            </td>
        </tr>
    }
</table>

<a asp-action="Create">Create Category</a><hr />

@* Displaying the delete post action's result message: *@
@TempData["Result"]

@* Some commonly used HTML Helpers: *@
@*
| HTML Helper                    | Description                                                                                  |
| ------------------------------ | -------------------------------------------------------------------------------------------- |
| `@Html.TextBoxFor()`           | Creates a text input (`<input type="text">`) bound to a model property.                      |
| `@Html.PasswordFor()`          | Creates a password input (`<input type="password">`) for a model property.                   |
| `@Html.TextAreaFor()`          | Generates a `<textarea>` for a model property.                                               |
| `@Html.EditorFor()`            | Automatically chooses the correct input type based on the property's data type and metadata. |
| `@Html.HiddenFor()`            | Creates a hidden input field (`<input type="hidden">`) for a model property.                 |
| `@Html.CheckBoxFor()`          | Generates a checkbox (`<input type="checkbox">`) bound to a boolean model property.          |
| `@Html.RadioButtonFor()`       | Creates a radio button input for a model property.                                           |
| `@Html.DropDownListFor()`      | Renders a `<select>` dropdown for a model property, based on a provided `SelectList`.        |
| `@Html.ListBoxFor()`           | Renders a multi-select list box bound to a collection property.                              |
| `@Html.DisplayFor()`           | Displays the value of a model property as read-only content.                                 |
| `@Html.DisplayNameFor()`       | Gets the display name for the model property using its metadata.                             |
| `@Html.LabelFor()`             | Generates a `<label>` tag with the name of the model property.                               |
| `@Html.ValidationMessageFor()` | Shows a validation message for a specific property, if any validation error exists.          |
*@